import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import classification_report, confusion_matrix, accuracy_score

#Load data
df = pd.read_csv('filtered_data.csv')

#Choose your feature(s)
#Try: kidney disease
features = ['moderate.to.severe.chronic.kidney.disease']

#can also include acute renal failure by doing:
#features = ['moderate.to.severe.chronic.kidney.disease','acute.renal.failure',] (JUST ADD THE VARIABLES!!)

X = df[features]

#Target death 
y = df['death']

#TRAIN + TEST

#Split
X_train, X_test, y_train, y_test = train_test_split(
    X, y, test_size=0.2, random_state=42, stratify=y
)

#Fit a Na√Øve Bayes classifier
model = GaussianNB()
model.fit(X_train, y_train)

#PREDICT + EVALUATE
y_pred = model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(
    y_test, y_pred, target_names=['Survived', 'Died']
))
print("Confusion Matrix:\n", confusion_matrix(y_test, y_pred))
